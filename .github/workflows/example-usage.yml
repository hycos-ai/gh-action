name: Example - Build Log Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Sample job that might fail/warn to generate interesting logs
  sample-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install
          echo "Dependencies installed successfully"
          
      - name: Run tests (might have warnings)
        run: |
          # This might generate warnings or errors for analysis
          npm run test || echo "Tests completed with issues"
          
      - name: Build project
        run: |
          npm run build
          echo "Build completed"

  # Analyze the logs from the above job
  analyze-logs:
    runs-on: ubuntu-latest
    needs: [sample-build]
    if: always() # Run even if previous job fails
    steps:
      - name: Analyze Build Logs
        uses: ./  # Use the local action (change this to your-username/repo-name@v1 when published)
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
          s3-bucket: ${{ secrets.S3_BUCKET_NAME }}
          s3-key-prefix: 'build-logs'
          # analysis-api-endpoint: ${{ secrets.ANALYSIS_API_ENDPOINT }}  # Uncomment when using custom API
          analysis-timeout: '300'
        id: log-analysis
        
      - name: Display Results
        run: |
          echo "Analysis Status: ${{ steps.log-analysis.outputs.analysis-status }}"
          echo "Issues Found: ${{ steps.log-analysis.outputs.issues-found }}"
          echo "S3 URL: ${{ steps.log-analysis.outputs.s3-url }}"
          
      - name: Comment on PR (optional)
        if: github.event_name == 'pull_request' && steps.log-analysis.outputs.issues-found > '0'
        uses: actions/github-script@v7
        with:
          script: |
            const analysisResults = JSON.parse(`${{ steps.log-analysis.outputs.analysis-results }}`);
            const issuesCount = ${{ steps.log-analysis.outputs.issues-found }};
            const s3Url = '${{ steps.log-analysis.outputs.s3-url }}';
            
            const comment = `## 🔍 Build Log Analysis Results
            
            **Status:** ${{ steps.log-analysis.outputs.analysis-status }}
            **Issues Found:** ${issuesCount}
            
            ${issuesCount > 0 ? `
            ### Summary
            - 🔴 Critical: ${analysisResults.summary.criticalIssues}
            - 🟠 High: ${analysisResults.summary.highIssues}  
            - 🟡 Medium: ${analysisResults.summary.mediumIssues}
            - 🟢 Low: ${analysisResults.summary.lowIssues}
            
            [📄 View Full Logs](${s3Url})
            ` : '🎉 No issues found! Your build logs look clean.'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 